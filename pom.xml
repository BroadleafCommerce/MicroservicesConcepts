<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.broadleafcommerce.microservices</groupId>
        <artifactId>broadleaf-microservices-project-root-tutorial</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>broadleaf-microservices-tutorial-research-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Broadleaf Microservice Tutorial Research Parent</name>
    <description>Parent project that holds tutorial projects that demonstrate different possible dev
        and extension use case patterns
    </description>

    <properties>
        <!-- This value is used during liquibase schema generation,
            which is executed by default during the maven build lifecycle -->
        <service-key>catalog</service-key>
    </properties>

    <!-- Housekeeping to establish the connection to source control -->
    <scm>
        <connection>scm:git:git@github.com:BroadleafCommerce/MicroservicesTutorialResearch.git
        </connection>
        <developerConnection>
            scm:git:git@github.com:BroadleafCommerce/MicroservicesTutorialResearch.git
        </developerConnection>
        <url>https://github.com/BroadleafCommerce/MicroservicesTutorialResearch</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>broadleaf-microservices</id>
            <url>https://repository.broadleafcommerce.com/repository/microservices/</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>broadleaf-microservices</id>
            <url>https://repository.broadleafcommerce.com/repository/microservices/</url>
        </repository>
    </repositories>

    <!-- These are examples and the generated jars should not be deployed during CI -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- This tutorial suite focuses on customization of CatalogServices -->
    <dependencies>
        <dependency>
            <groupId>com.broadleafdemo</groupId>
            <artifactId>demo-catalog-services</artifactId>
            <version>${demo.version}</version>
        </dependency>
        <dependency>
            <groupId>com.broadleafcommerce.microservices</groupId>
            <artifactId>broadleaf-catalog-services-metadata</artifactId>
        </dependency>
    </dependencies>

    <modules>
        <module>concepts</module>
    </modules>

</project>
